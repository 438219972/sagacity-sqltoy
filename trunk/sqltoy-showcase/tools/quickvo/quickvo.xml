<?xml version="1.0" encoding="UTF-8"?>
<quickvo xmlns="http://www.sagframe.com/schema/quickvo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
      xsi:schemaLocation="http://www.sagframe.com/schema/quickvo http://www.sagframe.com/schema/sqltoy/quickvo.xsd">
	<property file="../../src/main/resources/application.properties" />
	<!-- 最大小数位长度,避免个别数据库NUMBER(m,0)的情况下获取出来的默认小数位长度都很长 -->
	<property name="max.scale.length" value="3" />
	<property name="project.version" value="1.0.0" />
	<property name="project.name" value="sqltoy-showcase" />
	<property name="project.package" value="org.sagacity.sqltoy" />
	<property name="include.schema" value="false" />
	<!-- oracle支持schema,mysql\DB2:catalog,4.0.6版本之后增加name属性 -->
	<datasource name="sqltoy" url="${jdbc.connection.url}" driver="${jdbc.connection.driver_class}"  catalog="${jdbc.connection.catalog}"
		username="${jdbc.connection.username}" password="${jdbc.connection.password}" />
	<tasks dist="../../src/main/java" encoding="UTF-8">
		<!-- 4.0.6之后增加datasource属性适应多数据库配置 -->
		<task active="true" author="zhongxuchen" include="^SQLTOY_\w+" datasource="sqltoy">
			<vo package="${project.package}.showcase.vo" substr="Sqltoy" name="#{subName}VO" />
			<dao package="${project.package}.showcase.dao" name="#{subName}Dao"	active="false" />
		</task>
		<task active="false" author="zhongxuchen" include="^SYS_\w+" datasource="sqltoy">
			<vo package="${project.package}.system.vo" substr="Sys" name="#{subName}VO" />
			<dao package="${project.package}.system.dao" name="#{subName}Dao" active="false" />
		</task>
	</tasks>
	<!-- 
		主键策略配置:identity类型的会自动产生响应的主键策略，其他场景sqltoy根据主键类型和长度自动分配响应的策略方式.
		strategy:分:sequence\assign\generator 三种,sequence为数据库sequence模式需要指定具体的sequence名称，assign 为手工赋值，Generator则为指定具体产生策略
		generator:主键产生器,目前分:default:22位长度的主键、nanotime:26位纳秒形式;snowflake雪花算法、uuid:32位唯一算法
	-->
	<primary-key>
		<table name="SQLTOY_\w+|SYS_\w+" strategy="generator" generator="default"/>
		<!-- <table name="xxxTABLE" strategy="sequence" sequence="SEQ_XXXX"/> -->
		<!--<table name="sys_staff_info" strategy="generator" generator="snowflake"/>-->
	</primary-key>

	<!-- 主子表的级联关系 update-cascade:delete 表示对存量数据进行删除操作,也可以写成:ENABLED=0(sql片段,置状态为无效) -->
	<cascade>
		<table name="SQLTOY_DICT_DETAIL" update-cascade="delete" load="STATUS=1" />
	</cascade>

	<!-- 数据类型对应关系，native-types表示特定数据库返回的字段类型; jdbc-type：表示对应jdbc标准的类型(见:java.sql.Types), 
		主要用于vo @Column注解中，设置其类型,方便操作数据库插入或修改时设置类型;java-type:表示对应java对象的属性类型 -->
	<type-mapping>
		<sql-type native-types="DATE,DATETIME" jdbc-type="DATE" java-type="java.util.Date" />
		<sql-type native-types="TIMESTAMP(6),TIMESTAMP" jdbc-type="TIMESTAMP" java-type="java.sql.Timestamp" />
		<sql-type native-types="CHAR,CLOB" java-type="String" />
		<sql-type native-types="LONGTEXT,MEDIUMTEXT,TEXT,VARCHAR,VARCHAR2" jdbc-type="VARCHAR"  java-type="String" />
		<sql-type native-types="TINYINT,INT,INTEGER" java-type="Integer" />
		<sql-type native-types="BIGINT" scale="0" java-type="Long" />
		<sql-type native-types="NUMBER,DECIMAL,NUMERIC" precision="1..8" scale="0" jdbc-type="INTEGER" java-type="Integer" />
		<sql-type native-types="NUMBER,DECIMAL,NUMERIC" precision="9..18" scale="0" jdbc-type="INTEGER" java-type="Long" />
		<sql-type native-types="NUMBER,DECIMAL,NUMERIC" precision="2..14" scale="1..4" jdbc-type="DECIMAL" java-type="java.math.BigDecimal" />
		<sql-type native-types="NUMBER,DECIMAL,NUMERIC" precision="19..38" scale="0..6" jdbc-type="DECIMAL" java-type="java.math.BigDecimal" />
		<sql-type native-types="image" java-type="byte[]" />
		<sql-type native-types="BLOB,LONGBLOB,MEDIUMBLOB" jdbc-type="BLOB"  java-type="byte[]" />
	</type-mapping>
</quickvo>