<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 所有分库分表策略开发者可以自行实现接口进行拓展 -->
	<!-- 按照周期范围进行分表查询 -->
	<bean id="historyTableStrategy" name="dateHisTable"
		class="org.sagacity.sqltoy.plugin.sharding.DefaultShardingStrategy"
		init-method="initialize">
		<!-- 多少天内查询实时表,可以用逗号分隔,如:value="360,35,1" -->
		<property name="days" value="14" />
		<property name="dateParams"
			value="createTime,beginDate,bizDate,beginTime,bizTime" />
		<!-- 实时表和历史表对照 -->
		<property name="tableNamesMap">
			<map>
				<!-- value可用逗号分隔,跟days对应 ,如:value="a,b,c" -->
				<entry key="SYS_SHARDING_REAL" value="SYS_SHARDING_HIS" />
			</map>
		</property>
	</bean>

	<!-- 按照权重进行分库查询分流策略 -->
	<bean id="dataSourceStrategy" name="multiDataSource"
		class="org.sagacity.sqltoy.plugin.sharding.DefaultShardingStrategy"
		init-method="initialize">
		<!-- 不同数据库的分配权重 -->
		<property name="dataSourceWeight">
			<map>
				<entry key="dataSource" value="30" />
				<entry key="dataSourceView" value="70" />
			</map>
		</property>
		<!-- 数据库有效性检测时间间隔秒数,小于等于0表示不自动检测数据库 -->
		<property name="checkSeconds" value="180" />
	</bean>

	<!-- 按照hash取模进行分库和分表策略 -->
	<bean id="hashDataSourceSharding" name="hashDataSourceSharding"
		class="org.sagacity.sqltoy.plugin.sharding.HashShardingStrategy"
		init-method="initialize">
		<!-- 不同数据库的分配权重 -->
		<property name="dataSourceMap">
			<map>
				<entry key="0" value="dataSource" />
				<entry key="1" value="sharding1" />
				<entry key="2" value="sharding2" />
			</map>
		</property>
		<!-- 分表 -->
		<property name="tableMap">
			<map>
				<entry key="0" value="SYS_STAFF_INFO" />
				<entry key="1" value="SYS_STAFF_INFO_1" />
			</map>
		</property>
	</bean>

	<!-- 配置sqltoy框架的上下文 -->
	<bean id="sqlToyContext" name="sqlToyContext"
		class="org.sagacity.sqltoy.SqlToyContext" init-method="initialize">
		<!-- 指定sql.xml 文件的路径实现目录的递归查找,非必须属性 -->
		<property name="sqlResourcesDir"
			value="classpath:sqltoy/showcase/" />
		<!-- 跨数据库函数自动替换(非必须项),适用于跨数据库软件产品,如mysql开发，oracle部署 -->
		<property name="functionConverts" value="default" />

		<!-- 提供项目对数据库新增、修改操作时完成诸如:创建人、创建时间、修改人、修改时间等关键字段统一赋值，减轻开发者每次赋值操作 -->
		<property name="unifyFieldsHandler">
			<bean class="sqltoy.showcase.SqlToyShowCaseUnifyFieldsHandler" />
		</property>
		<!-- 缓存翻译管理器,非必须属性 -->
		<property name="translateConfig"
			value="classpath:sqltoy-translate.xml" />
		<!-- 集成elasticsearch,可以配置多个地址 -->
		<property name="elasticEndpoints">
			<list>
				<bean class="org.sagacity.sqltoy.config.model.ElasticEndpoint">
					<constructor-arg value="${es.default.url}" />
					<property name="id" value="default" />
					<!-- 6.3.x 版本支持xpack sql查询
					<property name="enableSql" value="true" />-->
					<!-- <property name="username" value="" /> <property name="password" 
						value="" /> -->
				</bean>
			</list>
		</property>

		<!-- 默认值为:false -->
		<property name="debug" value="${sqltoy.debug}" />
		<!-- 默认值为:50,提供sqltoy批量更新的batch量 -->
		<property name="batchSize" value="${sqltoy.batchSize}" />
		<!-- 如果是单一类型的数据库，建议dialect一定要设置,可避免不必要的数据库类型判断 -->
		<property name="dialect" value="${sqltoy.dialect}" />
		<!-- 默认值为:100000,设置分页查询最大的提取数据记录量,防止恶意提取数据造成系统内存压力以及保障数据安全 -->
		<property name="pageFetchSizeLimit" value="50000" />
		<!-- 3.3.4 开始增加的参数便于为Dao设置基本的数据源,非必填项 -->
		<property name="defaultDataSource" ref="dataSource" />
		<property name="printSqlStrategy" value="debug" />
	</bean>
	<bean id="sqlToyLazyDao" name="sqlToyLazyDao"
		class="org.sagacity.sqltoy.dao.impl.SqlToyLazyDaoImpl" />
	<bean id="sqlToyCRUDService" name="sqlToyCRUDService"
		class="org.sagacity.sqltoy.service.impl.SqlToyCRUDServiceImpl" />
</beans>