/**
 *@Generated by QuickVO Tools 2.0
 */
package sqltoy.showcase.sagacity.vo;

import org.sagacity.sqltoy.config.annotation.SqlToyEntity;
import java.util.Date;
import java.util.List;
import sqltoy.showcase.sagacity.vo.base.AbstractDictTypeVO;

/**
 * @project sqltoy-showcase
 * @author zhongxuchen
 * @version 1.0.0
 * 数据字典分类表  		
 * DictTypeVO generated by sag_dict_type
 */
@SqlToyEntity
public class DictTypeVO extends AbstractDictTypeVO {	
	/**
	 * 
	 */
	private static final long serialVersionUID = 6023096453316608908L;
	
	/** default constructor */
	public DictTypeVO() {
		super();
	}
	
	/*---begin-constructor-area---don't-update-this-area--*/
	/** pk constructor */
	public DictTypeVO(String dictTypeCode)
	{
		this.dictTypeCode=dictTypeCode;
	}

	/** minimal constructor */
	public DictTypeVO(String dictTypeCode,String dictTypeName,Integer dataType,String status)
	{
		this.dictTypeCode=dictTypeCode;
		this.dictTypeName=dictTypeName;
		this.dataType=dataType;
		this.status=status;
	}

	/** full constructor */
	public DictTypeVO(String dictTypeCode,String dictTypeName,String comments,Integer dataSize,Integer dataType,String operator,Date operateDate,String segmentName,String segmentDictType,String status)
	{
		this.dictTypeCode=dictTypeCode;
		this.dictTypeName=dictTypeName;
		this.comments=comments;
		this.dataSize=dataSize;
		this.dataType=dataType;
		this.operator=operator;
		this.operateDate=operateDate;
		this.segmentName=segmentName;
		this.segmentDictType=segmentDictType;
		this.status=status;
	}

    /**
	 * mapping sag_dict_detail data to sag_dict_type oneToMany List
	 */
	public void mappingDictDetailVOs(List<DictTypeVO> mainSet,List<DictDetailVO> itemSet)
    {
    	if(mainSet==null || mainSet.isEmpty() || itemSet==null||itemSet.isEmpty())
    		return;
    	DictTypeVO main;
    	DictDetailVO item;
    	for(int i=0;i<mainSet.size();i++){
    		main=mainSet.get(i);
    		if(itemSet.size()==0)
    			break;
    		for(int j=0;j<itemSet.size();j++){
    			item=itemSet.get(j);
    			if(main.getDictTypeCode().equals(item.getDictTypeCode())){
    			   main.dictDetailVOs.add(item);
    			   itemSet.remove(j);
    			   j--;
    			}
    		}
    	}
    }
	/*---end-constructor-area---don't-update-this-area--*/
	
	/**
     *@todo vo columns to String
     */
	public String toString() {
		return super.toString();
	}
	
	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#clone()
	 */
	public DictTypeVO clone() {
		try {
			// TODO Auto-generated method stub
			return (DictTypeVO) super.clone();
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
		return null;
	}
	
}
