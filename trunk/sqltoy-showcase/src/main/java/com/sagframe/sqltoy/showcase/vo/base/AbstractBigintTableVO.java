/**
 *@Generated by sagacity-quickvo 4.13
 */
package com.sagframe.sqltoy.showcase.vo.base;

import java.io.Serializable;
import org.sagacity.sqltoy.config.annotation.Entity;
import org.sagacity.sqltoy.config.annotation.Id;
import org.sagacity.sqltoy.config.annotation.Column;


/**
 * @project sqltoy-showcase
 * @version 1.0.0
 * Table: sqltoy_bigint_table   
 */
@Entity(tableName="sqltoy_bigint_table",pk_constraint="PRIMARY")
public abstract class AbstractBigintTableVO implements Serializable,
	java.lang.Cloneable {
	 /*--------------- properties string,handier to copy ---------------------*/
	 //full properties 
	 //id,name
	 
	 //not null properties
	 //id,name

	/**
	 * 
	 */
	private static final long serialVersionUID = 5464934304853365764L;
	
	/**
	 * 主键
	 */
	@Id(strategy="generator",generator="org.sagacity.sqltoy.plugins.id.SnowflakeIdGenerator")
	@Column(name="id",length=20L,type=java.sql.Types.BIGINT,nullable=false)
	protected Long id;
	
	/**
	 * 名称
	 */
	@Column(name="name",length=100L,type=java.sql.Types.VARCHAR,nullable=false)
	protected String name;
	


	/** default constructor */
	public AbstractBigintTableVO() {
	}
	
	/** pk constructor */
	public AbstractBigintTableVO(Long id)
	{
		this.id=id;
	}


	/** full constructor */
	public AbstractBigintTableVO(Long id,String name)
	{
		this.id=id;
		this.name=name;
	}
	
	/**
	 *@param id the id to set
	 */
	public void setId(Long id) {
		this.id=id;
	}
		
	/**
	 *@return the Id
	 */
	public Long getId() {
	    return this.id;
	}
	
	/**
	 *@param name the name to set
	 */
	public void setName(String name) {
		this.name=name;
	}
		
	/**
	 *@return the Name
	 */
	public String getName() {
	    return this.name;
	}



	/**
     * @todo vo columns to String
     */
    @Override
	public String toString() {
		StringBuilder columnsBuffer=new StringBuilder();
		columnsBuffer.append("id=").append(getId()).append("\n");
		columnsBuffer.append("name=").append(getName()).append("\n");
		return columnsBuffer.toString();
	}
}
